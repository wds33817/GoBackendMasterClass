Install images:
docker pull <image>:<tag>
docker pull mysql:8.0

docker images
docker ps

Start a container:
docker run --name <container_name> -e <environment_variable> -d <image>:<tag>

Port mapping:
docker run --name <container_name> -e <environment_variable> -p <host_ports:container_ports> -d <image>:<tag>
docker run --name postgres12 -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -d postgres:12-alpine


Run command in container:
docker exec -it <container_name_or_id> <command> [args]
docker exec -it postgres12 psql -U root


docker run --name mysql -d \
    -p 3306:3306 \
    -e MYSQL_ROOT_PASSWORD=change-me \
    --restart unless-stopped \
    mysql:8



Read Phenomena:

Dirty READ: A transaction reads data written by other concurrent uncommitted transaction.

Non-Repeatable READ: A transaction reads the same row twice and sees different value because it has been modified by other committed transaction.

Phantom READ: A transaction re-executes a query to find rows that satisfy a condition and sees a different set of rows, due to changes by other committed transaction.

Serialization Anomaly: The result of a group of concurrent committed transaction is impossible to achieve if we try to run them sequentially in any order without overlapping.



docker exec -it mysql8 mysql -uroot -psecret SimpleBank
mysql> show databases;
mysql> use SimpleBank;
mysql> select @@transaction_isolation;
mysql> select @@global.transaction_isolation;


mysql> set session transaction isolation level read uncommitted;
Query OK, 0 rows affected (0.00 sec)

mysql> start transaction;
Query OK, 0 rows affected (0.00 sec)

mysql> begin;
Query OK, 0 rows affected (0.00 sec)

mysql> update accounts set balance = balance - 10 where id = 1;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from accounts where id = 1;

On the other terminal, we can see 
mysql> select * from accounts where id = 1;
+----+-------+---------+----------+---------------------+
| id | owner | balance | currency | created_at          |
+----+-------+---------+----------+---------------------+
|  1 | one   |      90 | USD      | 2020-09-06 15:09:38 |
+----+-------+---------+----------+---------------------+
1 row in set (0.00 sec)

dirty read;

mysql> set session transaction isolation level read committed;
Query OK, 0 rows affected (0.00 sec)
mysql> select @@transaction_isolation;




[Same query was executed but different result was returned]
mysql> select * from accounts where balance >= 90;
+----+-------+---------+----------+---------------------+
| id | owner | balance | currency | created_at          |
+----+-------+---------+----------+---------------------+
|  1 | one   |      90 | USD      | 2020-09-06 15:09:38 |
|  2 | two   |     100 | USD      | 2020-09-06 15:09:38 |
|  3 | three |     100 | USD      | 2020-09-06 15:09:38 |
+----+-------+---------+----------+---------------------+
3 rows in set (0.00 sec)

mysql> select * from accounts where balance >= 90;
+----+-------+---------+----------+---------------------+
| id | owner | balance | currency | created_at          |
+----+-------+---------+----------+---------------------+
|  2 | two   |     100 | USD      | 2020-09-06 15:09:38 |
|  3 | three |     100 | USD      | 2020-09-06 15:09:38 |
+----+-------+---------+----------+---------------------+

